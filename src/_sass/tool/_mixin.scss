/**
 * Breakpoint
 */
$bps: (
  mobile:     22.5rem, // 360px
  tablet:     37.5rem, // 600px
  tablet-l:   56.25rem, // 900px
  laptop:     77.5rem, // 1240px
  laptop-l:   90rem, // 1240px
  desktop:    100rem, // 1600px 
  desktop-l:  120rem, // 1920px 
  4k:         160rem, // 2560px //TODO find a size/value for that value
) !default;

@mixin respond($bp) {
  @if map-has-key($bps, $bp) {
    @media screen and (min-width: #{map-get($bps, $bp)}) {
      @content;
    }
  } @else {
    @warn "Unknown `#{$bp}` in $bps, please check";
  }
}

// usage

/*
@include respond(mobile) {}   // 360px
@include respond(tablet) {}   // 600px
@include respond(tablet-l) {} // 900px
@include respond(laptop) {}   // 1240px
@include respond(desktop) {}  // 1440px
@include respond(desktop-l) {}  // 1920px
@include respond(tv) {}   // ?px
*/

// * List bare to reset ol, ul and dl elements
@mixin reset-list() {
  padding: 0;
  margin: 0;
  list-style: none;
}

// Flexboxs
@mixin dp-flex-direction-column {
  display: flex;
  flex-direction: column;
}

@mixin dp-flex-apart-center {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: var(--size-16);
}

// Positions
@mixin pos-rel-overflow-hidden {
  position: relative;
  overflow: hidden;
}

@mixin pos-rel-object-on-top {
  position: relative;
  z-index: var(--layer-forward);
}

@mixin pos-fix-zero-all-sides {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

@mixin pos-abs-zero-all-sides {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

@mixin pos-abs-zero-all-sides-pseudo-class {
  position: absolute;
  z-index: var(--layer-back);
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100%;
  content: "";
}

// Fit media (img,video,picture) into its parent box
@mixin fit-media-into-container {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}

// Transform and scale
@mixin trans-and-scale {
  transform: scale(1);
  transition: transform 0.3s ease-in;
}

@mixin scale-out-on-hover-and-focus {
  transform: scale(1.03);
}

// Container
@mixin default-contain {
  max-width: var(--contain-target-width);
  padding: 0 var(--size-16);
  margin: 0 auto;
}


@mixin fix-double-shape-before-and-after {
  position: absolute;
  transform: translateY(-50%);
  top: 50%;
  content: "";
  border: 2px solid var(--border-color);
  display: block;
}

@mixin fix-double-shape-before($size) {
  width: $size;
  height: $size;
}

@mixin fix-double-shape-after($size) {
  width: $size;
  height: $size;
}